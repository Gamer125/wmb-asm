nzoneurlstacksmash v0.2 by yellowstar6. This is an Nintendo Zone/DS Station exploit. It hasn't been tested with Nintendo Zone yet. NetFront 3.3 used by DS Station has stack smash bugs in a function handling tag fields with URLs. Nintendo Zone v3.0 has this bug. This exploit can bootstrap an embedded .nds.

In order to use this exploit, a Linux/hostapd compatible box with a wireless NIC compatible with hostapd is required, to use it at home.(Patches need applied to hostapd in order for the Nintendo Zone client to connect the AP, it's unknown what beacon tags DSi sysmenu checks for.) BIND needs installed, to redirect DNS to your web server. An forwarder/proxy app for https is required, when running a web server with DNS redirection.(Such as httpsforwarder in wmb-asm SVN trunk.) The domain name that needs redirected and forwarded can be captured with Wireshark, etc. The SSID and WEP key from a real Nintendo Zone/DS Station AP is required.(The WEP key is generated from the SSID.) At a real Nintendo Zone AP, airpwn and a wireless NIC compatible with LORCON is required, as well as the WEP key. If you want to use airpwn, the content file needs to have a Location header to redirect to your server. This is because the filesize of the exploit exceeds airpwn's limit. Using airpwn at a real NZone AP location is dangerous and not recommended, you must be cautious since every DS in range of the airpwn box will receive the injected exploit html. Using airpwn at a real NZone AP shouldn't be tried as other DSes besides the one you own, that are using the DS Station/NZone client and are not playing demos will download the injected exploit.

This exploit works with any html sent over http. With Nintendo's DS Station server, this is mostly the *_up.html files, which are used for the main screen. With third-party companies, which have a link to their site on the Nintendo Zone index html, all html is sent over http as Nintendo won't sign third-party server certs with Nintendo's server CA. Third-party content is stored on third-party servers. It's unknown if there's still vulnerable html transferred with HTTP with the NZone server, the main screen index html now uses the same CGI HTTPS-only system as the sub-screen html. By default, this exploit generates htmlhaxx_x.html,(x is dsstation/nzone) which should replace the target html, for example dsds_menu_up.html retrieved by the client.(With a web server, the htmlhaxx html can be linked to from the target html, like dsds_menu_up.html.)

Credits:
WinterMute and chishm for bootloader and BootStrap, loadnds is BootStrap with a different Makefile(s).
Team Twiizers for tips on cache for Arm7 bootstrap fix

